import React, { useState, useEffect, useRef } from 'react'
import useWindowSize from './hooks/useWindowSize'
import useScrollTop from "./hooks/useScrollTop"
import Moth from './components/Moth'
import ReviewSlider from './components/ReviewSlider'
import { TweenMax, Power2 } from 'gsap'
import tools from './tools'
let Tarantula = React.lazy(() => import("./components/Tarantula"))

function App() {
  const mentoringSection = useRef(null)
  const app = useRef(null)
  const windowSize = useWindowSize()
  const scroll = useScrollTop()
  const [isMobile, updateIsMobile] = useState(windowSize.width/windowSize.height <= 100/101)

  useEffect(() => {
    updateIsMobile(windowSize.width/windowSize.height <= 100/101)
  }, [windowSize.width, windowSize.height, isMobile])

  function navigationHandler(e) {
    e.preventDefault()
    const headerOffset = 0
    const html = app.current.parentNode.parentNode.parentNode
    const targetScroll = app.current.querySelector(e.target.getAttribute('href')).offsetTop - headerOffset
    TweenMax.to(html, 0.5, { scrollTop: targetScroll, ease: Power2.easeInOut })
    window.history.replaceState(undefined, undefined, e.target.getAttribute('href'))
  }

  return (
    <div ref={app} className="App">
      <header className="main-header">
        <nav className="navbar">
          <li><a href="#home" onClick={navigationHandler}>warkentien2</a></li>
          <li><a href="#animation" onClick={navigationHandler}>Niche</a></li>
          <li><a href="#projects" onClick={navigationHandler}>Mentoring</a></li>
          <li><a href="#contact" onClick={navigationHandler}>Contact</a></li>
        </nav>
      </header>
      <main id="home" className="main">
        <section id="home" className="section hero">
          <h1 className="hero__title">
            <span tabIndex="-1" className="block right">
              <span className="block font--tiny right"><a className="brand hero__title--highlight" href="#home" onClick={navigationHandler}>Philip D. Warkentien II</a></span>
              <span className="block font--small right--overflow">Complex UI &</span>
            </span>
            <span className="block font--small left left--overflow">Complex UI &</span>
            <span className="block left hero__title__block">
              <span className="block right font--regular">animation-focused</span>
              <span className="block right font--tiny">front-end <span className="hero__title--highlight">developer</span></span>
              <span className="block right font--tiny">& <span className="hero__title--highlight">mentor</span></span>
            </span>
          </h1>
          <React.Suspense fallback={<span />}>
            {isMobile ? <Tarantula isMobile={true} /> : <span />}
            {!isMobile ? <Tarantula isMobile={false} /> : <span />}
          </React.Suspense>
        </section>
        <section id="animation" className="section section--second">
          <div className="container">
            <h2>Niche</h2>
            <h3>Visual Problem Solving</h3>
            <p>
              It is common knowledge amongst Designers that Developers will ruin your dreams:
            </p>
            <figure className="art-direction">
              <img className="resdivonsive-image" src="./designers.png" alt="Design versus Development" />
              <figcaption>Awwwards Conference <a className="highlight" href="https://www.youtube.com/watch?v=bEg5ySTUGxE"
                target="_blank"
                rel="noopener noreferrer"
                >
                  talk by Pablo Stanley
                </a> | InvisionApp Design Lead
              </figcaption>
            </figure>
            <p>
              If you ever heard "this <em>cannot</em> be done", that's where I come in! After all, we tell the computer what to do, 
              not the other way around.<br /><br />
              There's an ever growing need for Visual Web Developers. When the task was too big for a Web Master, the field was 
              split between Front and Backend. However, with Webpack, Docker, Typescript, Cross-Plataform programming, and 
              EverythingElse.js, most Front-End Developers are getting pulled into a Full-Stack role. Hiring a Front-End Developer no longer 
              guarantees that you'll have a Visual Developer. So, new job descriptions started popping up:
            </p>
            <ul>
              <li>UI-Focused Front-End Developer</li>
              <li>Front-End Animation Developer</li>
              <li>3D Rendering Front-End Developer</li>
              <li>Rich Media Developer</li>
              <li>UI Developer</li>
              <li>UX/UI Designer & Engineer</li>
            </ul>
            <p>
              Their goal? To fill the Visual Developer niche the Front-End Developer has created.
              <br />
              Before you commit a large budget to a 3D-renderred or Video project, talk to me.
            </p>
          </div>
          <Moth bottomAnchorSection={mentoringSection} scrollTop={scroll.position} windowSize={windowSize} />
        </section>
        <section ref={mentoringSection} id="projects" className="section section--third">
          <div className="container">
            <h2>Helping others</h2>
            <div className="row">
              <div className="col-sm-6 col-4">
                <Statistics topAnchorSection={mentoringSection} windowSize={windowSize} scrollTop={scroll.position} index={1} value={250} title="classroom students" />
              </div>
              <div className="col-sm-6 col-4">
                <Statistics topAnchorSection={mentoringSection} windowSize={windowSize} scrollTop={scroll.position} large index={2} value={5000} title="project reviews" />
              </div>
              <div className="col-sm-6 col-4">
                <Statistics topAnchorSection={mentoringSection} windowSize={windowSize} scrollTop={scroll.position} index={3} value={868} title="stackoverflow reputation" />
              </div>
              <div className="col-sm-6 col-12">
                <Statistics topAnchorSection={mentoringSection} windowSize={windowSize} scrollTop={scroll.position} index={4} value={14} title="peer onboarding" />
              </div>
            </div>
            <ReviewSlider windowSize={windowSize} />
            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. 
              Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure 
              dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non 
              proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>
          </div>
        </section>
        <footer id="contact" className="footer">
          <div className="container">     
            <div className="row contain">
              <div className="col-sm-12 col-6 col-wrap right contact-list contact-list--left">
                <h4>Find me:</h4>
                <ul>
                  <li className="contact"><a href="https://codepen.io/warkentien2/" target="_blank" rel="noopener noreferrer">Playground <i className="fab fa-codepen"></i></a></li>
                  <li className="contact"><a href="https://www.deviantart.com/warkentien2/gallery/" target="_blank" rel="noopener noreferrer">Art <i className="fab fa-deviantart"></i></a></li>
                  <li className="contact"><a href="https://stackoverflow.com/users/4714084/warkentien2" target="_blank" rel="noopener noreferrer">Helping <i className="fab fa-stack-overflow"></i></a></li>
                  <li className="contact"><a href="https://www.codewars.com/users/warkentien2" target="_blank" rel="noopener noreferrer">
                    Training <svg viewBox="0 0 50 50" fill="none">
                      <path d="M25.7813 0.302734C25.5957 0.351562 25.3516 0.449219 25.2441 0.507812C25.1367 0.576172 24.6777 0.634766 24.2188 0.644531C22.9297 0.664062 22.4023 0.820312 21.9043 1.32812C21.5137 1.72852 21.4551 1.75781 20.957 1.75781C20.2148 1.75781 19.9707 1.875 19.2383 2.57812C18.623 3.16406 17.7441 3.85742 17.3242 4.08203C17.2168 4.14062 16.5918 4.27734 15.9375 4.39453C14.5117 4.63867 14.2676 4.7168 13.9941 5.04883L13.7891 5.30273L12.9492 5.12695C11.416 4.80469 10.4199 5.09766 9.3457 6.18164C8.75 6.78711 8.70117 6.81641 7.92969 6.98242C7.5 7.08008 6.91406 7.28516 6.64062 7.44141C5.9082 7.86133 5.37109 8.7793 5.37109 9.62891C5.37109 10.0586 5.05859 10.4102 4.50195 10.5957C3.86718 10.8008 3.25195 11.3379 3.13476 11.7969C3.08593 11.9922 3.04687 12.4902 3.05664 12.9004C3.07617 13.6133 3.0664 13.6621 2.72461 14.1016C2.40234 14.5117 2.35351 14.6387 2.29492 15.3613C2.25586 15.8008 2.16797 16.4648 2.08984 16.8262C1.875 17.8906 1.89453 18.0273 2.39257 18.5352C2.63672 18.7793 2.83203 19.0137 2.83203 19.0625C2.83203 19.2676 2.48047 19.6582 2.1289 19.834C1.72851 20.0391 1.66015 20.2441 1.92382 20.5273C2.07031 20.6934 2.07031 20.7324 1.875 21.1328C1.69921 21.4844 1.66015 21.7188 1.66015 22.5195C1.66015 23.0469 1.69921 23.6523 1.74804 23.8477C1.8457 24.2676 1.79687 24.3457 1.21093 24.7461C0.624996 25.127 0.185543 25.9961 0.117183 26.8652C0.0585894 27.7051 0.224605 28.3594 0.654293 29.0137C0.99609 29.541 1.00586 29.541 0.888668 30.0781C0.644527 31.2109 0.585933 31.8457 0.68359 32.2363C0.820308 32.7344 1.34765 33.4082 1.74804 33.6035C2.1582 33.7988 2.24609 33.9453 2.24609 34.4531C2.24609 35.3418 2.43164 35.7422 3.14453 36.4453C3.50586 36.7969 3.81836 37.1484 3.81836 37.2266C3.82812 37.2949 3.83789 37.4414 3.84765 37.5488C3.85742 37.7051 3.92578 37.7441 4.16992 37.7441C4.44336 37.7441 4.58984 37.8516 5.18554 38.5156C5.82031 39.2188 5.86914 39.3164 5.83008 39.6387C5.81054 39.834 5.73242 40.1367 5.65429 40.3027C5.55664 40.5469 5.55664 40.6543 5.63476 40.7324C5.81054 40.9082 6.23047 40.752 6.38672 40.4395C6.57226 40.0977 6.78711 40 7.06054 40.1562C7.17773 40.2148 7.68554 40.2832 8.20312 40.3125C8.75976 40.332 9.21875 40.4102 9.3457 40.4883C9.49219 40.5859 9.6289 40.8594 9.77539 41.3574C10.0293 42.2266 10.4395 42.7539 11.1914 43.1836C11.8555 43.5547 12.2656 44.043 12.4023 44.6387C12.5977 45.4395 12.9395 45.7715 14.3555 46.582C15.3906 47.168 15.7617 47.4316 16.2109 47.9297C16.9336 48.7305 17.2852 48.8672 18.4961 48.7695C19.0332 48.7305 19.5703 48.6328 19.8535 48.5059C20.4297 48.2715 20.6348 48.3496 21.2305 49.0527C21.6504 49.5508 22.0215 49.8047 22.3535 49.8047C22.4609 49.8047 22.8711 49.6777 23.2715 49.5117C23.7891 49.3066 24.1699 49.2188 24.5606 49.2188C24.8633 49.2188 25.4199 49.1504 25.8008 49.0625C26.4746 48.9062 26.4941 48.9062 26.7676 49.1113C27.1582 49.4043 27.4121 49.375 27.4902 49.0332C27.5684 48.6719 27.8711 48.3984 28.3691 48.2422C28.6523 48.1445 29.0039 47.8613 29.6387 47.1973L30.5176 46.2891H31.5918C32.2754 46.2891 32.8711 46.2305 33.2031 46.1426C33.4961 46.0547 33.9063 45.9375 34.1113 45.8789C34.4043 45.791 34.6289 45.8105 35.2246 45.9473C35.8789 46.1035 36.0547 46.1035 36.8066 45.9961C37.9395 45.8301 38.1641 45.7227 38.7305 45.0684C39.6777 43.9551 39.5215 44.043 40.625 44.043C41.2305 44.043 41.7285 43.9941 41.9238 43.9062C42.4219 43.7012 43.2324 42.7734 43.3106 42.3242C43.418 41.6309 43.457 41.5234 43.6133 41.3672C43.7012 41.2793 43.9258 41.2109 44.1406 41.2109C44.3945 41.2109 44.6094 41.1328 44.8047 40.9668C45.1465 40.6836 45.8984 39.0234 45.8984 38.5645C45.8984 38.3105 45.9863 38.1543 46.2891 37.8809C46.7285 37.4805 46.7578 37.3145 46.582 36.0938C46.4941 35.5273 46.5039 35.3906 46.6309 35.2148C47.2266 34.4141 47.2656 34.3262 47.2656 33.9453C47.2656 33.7207 47.1777 33.3691 47.0703 33.1543C46.9531 32.9199 46.875 32.5781 46.875 32.2559C46.875 31.8066 46.9141 31.6992 47.2656 31.2988C47.7344 30.7617 47.8223 30.4492 47.9102 29.0137C47.9883 27.8027 47.9395 27.8906 48.7793 27.207C49.4824 26.6309 49.7461 25.9766 49.7461 24.8047C49.7461 24.2969 49.707 23.6133 49.668 23.2812C49.5996 22.8027 49.6191 22.6367 49.7559 22.3535C49.9512 21.9824 50.0586 20.9082 49.9609 20.3613C49.9121 20.0977 49.707 19.8047 49.2676 19.3359C48.6426 18.6719 48.6426 18.6719 48.75 18.291C48.8965 17.7539 48.7793 16.6602 48.5156 16.123C48.3789 15.8496 48.1055 15.5371 47.8027 15.3125C47.4316 15.0293 47.2949 14.8633 47.2363 14.5801C47.1387 14.1113 46.6113 13.4863 45.8984 12.9785C45.3223 12.5781 44.9024 12.0703 44.7754 11.6211C44.6289 11.1328 44.4531 11.0352 43.6914 11.0352C43.3008 11.0352 42.8809 10.9961 42.7441 10.9473C42.5 10.8496 41.6016 9.60938 41.3672 9.0332C41.2305 8.7207 41.1816 8.69141 40.8301 8.69141C40.4785 8.69141 40.4102 8.64258 39.9414 8.05664C39.3652 7.32422 39.0039 7.06055 38.3984 6.97266C37.9004 6.89453 37.7441 6.69922 37.6465 6.00586C37.5781 5.48828 37.0313 4.44336 36.5137 3.85742C36.1328 3.41797 35.332 3.125 34.541 3.125C33.7402 3.125 33.5156 2.98828 33.1348 2.29492C32.7344 1.58203 32.3535 1.2207 31.8652 1.08398C31.3379 0.9375 30 0.957031 29.541 1.12305C29.3262 1.20117 29.1406 1.26953 29.1309 1.26953C29.1113 1.26953 28.9258 1.10352 28.7207 0.898438C28.0957 0.292969 26.8164 0.0292969 25.7813 0.302734ZM25.6055 4.81445C25.9375 5.05859 27.1973 5.16602 27.6367 4.98047C27.9102 4.86328 27.9492 4.88281 28.3496 5.23438C29.1406 5.9668 29.6777 6.24023 30.459 6.30859C31.2891 6.38672 31.5527 6.5625 31.7188 7.11914C31.875 7.62695 32.5488 8.4668 32.9395 8.64258C33.1152 8.7207 33.4277 8.82812 33.6524 8.88672C34.1699 9.01367 34.2774 9.25781 34.2774 10.3223C34.2774 11.3281 34.4043 11.6309 35.2051 12.627C35.4981 12.998 35.7422 13.3496 35.7422 13.418C35.7422 13.4863 35.6445 13.6719 35.5274 13.8281C35.3516 14.0527 35.293 14.2578 35.2637 14.873C35.2344 15.5762 35.2637 15.6934 35.5469 16.2695C35.8399 16.875 35.8496 16.9141 35.7031 17.1387C35.6152 17.2754 35.4981 17.3828 35.4492 17.3828C35.4004 17.3828 35.2441 17.5488 35.1074 17.7539C34.9219 18.0371 34.834 18.3496 34.7559 19.0039C34.6387 19.9902 34.5313 20.2148 33.9746 20.5566C33.5059 20.8594 33.2422 21.2598 33.0957 21.9434L32.9785 22.4512L32.2363 22.7051C31.8262 22.8418 31.3867 23.0469 31.2598 23.1543L31.0254 23.3496L30.8106 23.1445C30.5176 22.8711 30.2734 22.8906 30.2734 23.1934C30.2734 23.6133 30.0195 23.9648 29.4434 24.3457C28.8965 24.7168 28.7695 24.7266 28.5352 24.3945C28.3594 24.1504 28.2617 24.1699 27.9297 24.5312C27.5977 24.9023 27.5879 24.8633 27.7832 23.75C27.9297 22.9492 28.1152 22.5195 28.3789 22.4219C28.7207 22.2949 28.9063 21.748 28.9063 20.9082C28.9063 20.166 28.9356 20.0391 29.1797 19.6875C29.4238 19.3262 29.4434 19.2383 29.4434 18.2715V17.2363L29.1309 17.1387C28.9551 17.0801 28.7891 17.002 28.75 16.9629C28.7109 16.9336 28.7402 16.6406 28.7988 16.3379C29.0332 15.2344 28.6523 13.9746 27.832 13.1836C27.5586 12.9199 27.3438 12.627 27.3438 12.5098C27.3438 12.4023 27.2461 12.0215 27.1289 11.6602C26.8555 10.8203 26.2793 10.1758 25.332 9.6582C24.9316 9.43359 24.5898 9.21875 24.5606 9.16992C24.5215 9.12109 24.4531 8.80859 24.4043 8.47656C24.2773 7.68555 24.0039 7.22656 23.2031 6.45508L22.5488 5.83008L21.8945 5.89844C21.5332 5.92773 21.0059 5.98633 20.7324 6.01562C20.3711 6.06445 20.2148 6.04492 20.2148 5.9668C20.2148 5.76172 20.5957 5.47852 20.9668 5.41992C21.1719 5.39062 21.5137 5.29297 21.7285 5.20508C22.9688 4.7168 23.0957 4.6875 23.7305 4.74609C24.1602 4.78516 24.4922 4.75586 24.7559 4.6582C25.166 4.51172 25.1856 4.51172 25.6055 4.81445ZM13.9062 10.0195C14.0137 10.1172 14.0625 10.3516 14.0625 10.7324C14.0625 11.3281 14.2187 11.6016 14.502 11.4844C14.5996 11.4453 14.6484 11.2988 14.6484 10.9961C14.6484 10.6738 14.707 10.4883 14.873 10.3125L15.0879 10.0684L16.5527 10.1367C18.2617 10.2246 18.5352 10.3223 19.5313 11.1816C20.1465 11.709 20.1563 11.7188 20.7715 11.7188C21.4453 11.7188 21.9043 11.8945 22.0703 12.1973C22.1191 12.3047 22.2168 12.6172 22.2754 12.9102C22.4219 13.5938 22.5781 13.7988 23.125 14.0723C23.8672 14.4531 24.1016 14.7168 24.3262 15.4492C24.4336 15.8105 24.6582 16.2988 24.834 16.5234C25.3125 17.1484 25.3125 17.1484 25.1465 17.5391C24.8828 18.1836 24.9609 18.6621 25.4785 19.4629C25.7129 19.8242 25.7129 19.834 25.5469 20.1953C25.4297 20.4297 25.3418 20.9277 25.3027 21.6113C25.2637 22.1875 25.1758 22.7148 25.1172 22.7734C24.9512 22.9395 24.7461 22.7148 24.5606 22.1582C24.3945 21.6602 24.0918 21.4258 23.7891 21.543C23.584 21.6211 23.1445 21.1523 23.1445 20.8496C23.1445 20.2441 22.4902 19.4141 21.8945 19.2773C21.5527 19.1895 21.2891 18.9648 21.2891 18.7402C21.2891 18.4961 20.7715 17.9199 20.3711 17.7344C20.1953 17.6562 19.7266 17.5488 19.3262 17.5195C18.4668 17.4414 18.1836 17.3145 17.832 16.8555C17.4121 16.2988 16.3379 16.1426 15.1074 16.4648L14.5215 16.6113L14.1309 16.2207C13.916 15.9961 13.6328 15.791 13.5059 15.7617C13.3691 15.7227 12.8223 15.752 12.2754 15.8105C11.4648 15.8984 11.2305 15.9668 10.9473 16.1816C10.752 16.3281 10.5762 16.4746 10.5469 16.5039C10.5176 16.543 10.3809 16.709 10.2344 16.875L9.9707 17.1875L9.04297 16.9336L8.10547 16.6895L7.65625 16.8848C6.69922 17.3145 6.25976 17.0898 6.44531 16.2695C6.51367 15.9668 6.51367 15.7422 6.43554 15.5566C6.27929 15.1465 6.38672 14.9219 7.10937 14.1504C7.4707 13.75 7.89062 13.2227 8.03711 12.9688C8.22265 12.6465 8.38867 12.4805 8.57422 12.4414C9.4043 12.2559 9.61914 12.1582 10.0586 11.7676C10.4785 11.3965 10.5859 11.3477 10.8691 11.3965C11.1719 11.4453 11.2109 11.4258 11.2598 11.1719C11.3574 10.7031 11.4551 10.6348 12.3633 10.3809C12.832 10.2539 13.3301 10.0781 13.4766 10.0098C13.6133 9.93164 13.7305 9.87305 13.7402 9.86328C13.75 9.86328 13.8281 9.93164 13.9062 10.0195ZM42.168 14.4141C42.4512 14.6484 42.6074 14.8828 42.6856 15.166C42.8613 15.8301 43.252 16.4746 43.5645 16.6016C43.75 16.6797 43.877 16.8262 43.9356 17.041C43.9844 17.2168 44.1992 17.5879 44.4238 17.8711C44.9902 18.584 45.0098 18.7207 44.7266 19.8145C44.668 20.0488 44.6094 20.5566 44.5996 20.9375C44.5801 21.5234 44.6191 21.6797 44.8047 21.9434C44.9219 22.1094 45.0488 22.3828 45.0781 22.5391C45.127 22.793 45.0977 22.8516 44.8633 22.9688C44.3652 23.2031 44.1113 24.1016 44.209 25.2539C44.2774 26.1328 44.1211 26.3574 43.3496 26.4746C42.7637 26.5625 42.6367 26.6797 41.3379 28.2422C40.6348 29.0918 40.2832 29.3457 39.6484 29.4434C39.4043 29.4824 39.0918 29.5801 38.9453 29.6484C38.5645 29.8438 38.3399 29.8145 38.0957 29.5312C37.6758 29.0527 37.1973 29.4727 37.3926 30.1562C37.5195 30.5957 37.4414 30.6641 36.8164 30.6641C36.4649 30.6641 36.0352 30.7422 35.7422 30.8594C35.0977 31.1133 34.6289 31.1035 34.1992 30.8398C33.9453 30.6836 33.6524 30.6152 33.0664 30.5859C32.4707 30.5566 32.1777 30.4883 31.8848 30.3125C31.6699 30.1953 31.1914 30.0391 30.8203 29.9707C30.4492 29.9023 29.9902 29.7363 29.8047 29.6094C29.6191 29.4824 29.1895 29.248 28.8574 29.0918C28.4766 28.916 28.1348 28.6621 27.9395 28.4082C27.6563 28.0566 27.627 27.9785 27.7246 27.7734C27.8613 27.4512 28.0762 27.3828 28.4766 27.5293C28.7402 27.627 28.8574 27.6172 29.1699 27.4902C29.4238 27.3828 29.6777 27.3535 29.9609 27.3926C30.5371 27.4805 31.3477 27.2949 31.8555 26.9531C32.1973 26.7285 33.3887 26.3672 33.8086 26.3672C34.0137 26.3672 34.4727 25.8301 34.5313 25.5078C34.6387 24.8926 34.707 24.834 35.3711 24.7852C36.709 24.6777 37.1387 24.2285 37.334 22.7539L37.4609 21.8359L38.0566 21.6016C38.7012 21.3574 39.3359 20.8301 39.5996 20.3125C39.7852 19.9512 39.8242 19.3164 39.707 18.5449L39.6289 18.0078L40.1465 17.666C40.918 17.168 41.0547 16.9238 41.0938 16.0156C41.1231 15.4492 41.0938 15.166 40.9766 14.9316C40.8887 14.7656 40.8496 14.5703 40.8887 14.5117C41.2012 13.9551 41.6016 13.9258 42.168 14.4141ZM15.0879 20.6152C15.4199 20.7812 15.5859 20.8008 16.1328 20.752C16.875 20.6836 17.0313 20.7422 17.6465 21.2988C18.0469 21.6699 18.0859 21.6797 18.7891 21.6797C19.5117 21.6797 19.5313 21.6895 19.7949 22.0215C20.0586 22.3535 20.293 22.4902 20.8203 22.5977C20.9961 22.6367 21.1523 22.7734 21.25 22.9785C21.3379 23.1445 21.582 23.4766 21.7969 23.7109C22.0801 24.0234 22.168 24.1992 22.1484 24.3945L22.1191 24.6582L20.459 24.7168C19.043 24.7656 18.6719 24.8145 17.9199 25.0391C16.3574 25.5078 16.0059 25.6934 15.6641 26.1719C15.0684 26.9922 14.9902 27.0508 14.4824 27.0508C13.8379 27.0508 13.125 27.3242 12.793 27.6953C12.5879 27.9395 12.5 28.1543 12.4512 28.623C12.3633 29.3359 12.2168 29.5215 11.2598 30.0879C10.8301 30.3516 10.5859 30.5762 10.3906 30.9082C10.0977 31.416 10.0684 31.7773 10.2051 33.0664L10.2832 33.7598L9.87305 34.1406C9.22851 34.7363 9.14062 34.9609 9.13086 36.123C9.13086 36.9629 9.10156 37.1582 8.96484 37.2363C8.7207 37.4023 8.33984 37.1777 8.11523 36.7383C8.00781 36.5332 7.65625 36.0742 7.33398 35.7129C7.01172 35.3516 6.71875 34.9414 6.67968 34.7949C6.5039 34.0039 6.40625 33.7109 6.2207 33.3691C6.11328 33.1738 5.98633 33.0078 5.9375 33.0078C5.88867 33.0078 5.77148 32.8613 5.66406 32.6855C5.51758 32.4414 5.46875 32.1973 5.46875 31.5918C5.46875 31.1621 5.40039 30.5664 5.32226 30.2734C5.24414 29.9805 5.20508 29.6582 5.23437 29.5605C5.26367 29.4727 5.5664 29.2578 5.91797 29.1016C6.25976 28.9453 6.54297 28.7695 6.54297 28.7109C6.54297 28.6426 6.41601 28.4766 6.26953 28.3398C6.03515 28.1152 5.97656 27.9395 5.86914 27.2461C5.68359 26.0645 5.71289 25.9961 6.38672 25.6152C7.04101 25.2441 7.61719 24.7754 7.77344 24.4727C7.84179 24.3555 7.93945 24.0039 8.00781 23.6816C8.07617 23.3594 8.17383 23.0469 8.22265 22.9785C8.27148 22.9199 8.66211 22.7441 9.09179 22.6074C9.79492 22.373 9.9414 22.2754 10.5664 21.6406L11.2598 20.9473L12.2461 20.9375C13.1152 20.9375 13.291 20.8984 13.7207 20.6738C14.3164 20.3613 14.5898 20.3516 15.0879 20.6152ZM22.1582 27.3633C22.3047 27.6172 22.2949 27.6465 22.0605 27.9004C21.9141 28.0469 21.6797 28.3691 21.5332 28.6133C21.3867 28.8574 21.0742 29.2578 20.8398 29.5117C20.293 30.0977 20.2246 30.3711 20.498 30.9277C20.752 31.4551 20.7617 31.8848 20.5078 32.4316C20.2637 32.9883 20.2637 33.5645 20.5078 33.9355C20.8594 34.4531 20.9277 34.9219 20.752 35.4004C20.6055 35.7617 20.6055 35.8789 20.7031 36.2012C20.9082 36.8359 21.2012 37.334 21.6504 37.832C22.0508 38.2812 22.0801 38.3496 22.0117 38.6621C21.8066 39.5898 22.1582 40.6445 22.8613 41.25C23.0762 41.4258 23.5156 41.6699 23.8281 41.7871C24.4727 42.0215 24.707 42.2754 24.707 42.7246C24.707 42.9004 24.8438 43.2422 25.0586 43.5547C26.2402 45.3711 26.1719 45.6738 24.5313 45.7715C23.9648 45.8008 23.0371 45.7715 22.3047 45.7031C20.9668 45.5664 20.7031 45.4492 20.7031 44.9707C20.7031 44.6582 20.459 44.5117 19.3848 44.1895C18.291 43.8672 18.0078 43.6523 17.4902 42.7734C17.2168 42.3145 16.9141 41.9629 16.6113 41.748C16.0645 41.3574 15.9277 41.0938 15.8105 40.2344C15.7422 39.8145 15.6152 39.4531 15.4102 39.1309C15.127 38.6914 15.1172 38.6328 15.2246 38.291C15.3613 37.832 15.3711 36.2891 15.2344 36.0352C15.1855 35.9375 14.9902 35.7715 14.8047 35.6641C14.5605 35.5176 14.4336 35.3516 14.3652 35.0879C14.1797 34.4336 14.2285 34.209 14.6484 33.75C15.0879 33.2715 15.332 32.7637 15.332 32.3242C15.332 31.8945 15.4687 31.6699 16.1133 31.0547C16.4648 30.7129 16.7188 30.3711 16.7969 30.127C17.0508 29.3555 17.4707 29.0039 18.1445 29.0039C18.3496 29.0039 18.5449 28.877 18.8867 28.5156C19.248 28.1348 19.4824 27.9883 19.9023 27.8711C20.5664 27.6758 21.1035 27.4121 21.2891 27.1973C21.4941 26.9531 21.9824 27.041 22.1582 27.3633ZM25.5078 30.1562C26.3672 31.4648 26.8945 32.0215 27.3535 32.0898C27.7734 32.1582 27.8809 32.2656 28.1738 32.8418C28.291 33.0566 28.5449 33.3691 28.75 33.5352C29.0918 33.8086 29.1992 33.8379 30.0391 33.8867C30.957 33.9453 30.957 33.9453 31.25 34.2969C31.7578 34.9121 33.3106 35.2832 34.1406 35C34.5899 34.8438 34.5899 34.8535 35.1953 35.166C35.7227 35.459 35.8984 35.498 36.7383 35.5273C37.9199 35.5762 38.0469 35.5469 38.6328 35.0586C39.1992 34.5898 39.6582 34.4727 40.0391 34.707C40.4297 34.9316 40.8203 34.9023 41.8652 34.5703C42.8906 34.2383 43.0957 34.2188 43.2617 34.4238C43.3496 34.5312 43.291 34.7559 42.9199 35.5566C42.5488 36.377 42.4805 36.6113 42.5293 36.9043C42.5977 37.3145 42.5098 37.4316 42.0703 37.5391C41.6406 37.6367 41.1426 38.1543 40.8301 38.8086C40.6738 39.1504 40.4688 39.4531 40.3809 39.4922C40.293 39.5215 39.9414 39.5508 39.5996 39.5508C39.043 39.5508 38.9356 39.5801 38.6328 39.8438C38.457 40.0098 38.2324 40.3027 38.1543 40.5078C37.9297 41.0742 37.8125 41.1328 37.2461 40.957C36.9141 40.8496 36.5332 40.8203 36.0059 40.8496C35.332 40.8984 35.1758 40.9473 34.5899 41.2988C34.2188 41.5234 33.877 41.6992 33.8184 41.6992C33.7695 41.6992 33.6426 41.6113 33.5352 41.4941C33.2324 41.1621 32.9102 41.0449 32.0801 40.9766C31.4844 40.9277 31.2305 40.8594 30.957 40.6738C30.7617 40.5371 30.5078 40.4297 30.4004 40.4297C30.2832 40.4297 30.0684 40.3223 29.9121 40.1953C29.4824 39.8438 29.2969 39.7754 28.5156 39.6973C28.1152 39.668 27.7051 39.5898 27.6074 39.5312C27.4023 39.4238 27.1484 38.8867 27.1484 38.5547C27.1484 38.1934 26.7481 37.4902 26.4258 37.2949C26.2598 37.1973 25.957 37.1094 25.7617 37.1094C25.3125 37.1094 25.1953 36.9336 25.1856 36.2109C25.1758 35.3906 25 34.9512 24.5801 34.668C24.2578 34.4629 24.2188 34.4043 24.2871 34.1797C24.4141 33.7891 24.3359 32.6953 24.1504 32.2949C23.9941 31.9434 23.9941 31.9043 24.1992 31.3184C24.375 30.8203 24.3945 30.6445 24.3164 30.293C24.2481 29.9902 24.2481 29.8145 24.3262 29.6582C24.4727 29.3945 24.7168 29.209 24.8535 29.2676C24.9023 29.2871 25.2051 29.6875 25.5078 30.1562Z" fill="#0c0032"/>
                    </svg>
                  </a></li>
                </ul>
              </div>
              <div className="col-sm-12 col-6 col-wrap contact-list contact-list--right">
                <h4>Reach out:</h4>
                <ul>
                  <li className="contact"><a href="https://www.linkedin.com/in/warkentien2/" target="_blank" rel="noopener noreferrer"><i className="fab fa-linkedin-in"></i> Portfolio</a></li>
                  <li className="contact"><a href="mailto:philip.dw2@gmail.com?Subject=Job%20Offer" target="_top"><i class="fas fa-envelope"></i> philip.dw2<br />@gmail.com</a></li>
                </ul>        
              </div>
            </div>
            <p className="center">© Copyright 2019 - <span className="no-wrap">Philip D. Warkentien II</span></p>
          </div>
        </footer>
      </main>
    </div>
  );
}

function Statistics({ topAnchorSection, windowSize, scrollTop, index, value, title, large = false }) {
  const number = useRef(null)
  const [showValue, updateValue] = useState(0)

  useEffect(() => {
    if(scrollTop + windowSize.height / 5 <= topAnchorSection.current.offsetTop) {
      const fraction = tools.growCompletelyFrom(scrollTop + windowSize.height / 5, topAnchorSection.current.offsetTop, topAnchorSection.current.offsetTop - windowSize.height / 2) / topAnchorSection.current.offsetTop
      number.current.parentNode.style.transform = `translateY(${((1 - fraction)) * 100}%)`
      updateValue(Math.round(value * Math.pow(fraction, 0.75)))
    } else {
      number.current.parentNode.style.transform = 'translateY(0)'
      updateValue(value);
    }
  }, [scrollTop])

  return (
    <p className={`statistics statistics-${index}${large ? ' statistics--large' : ''}`}>
      <span ref={number} className="large">{showValue}<sup>+</sup></span><br /><span>{title}</span>
    </p>
  )
}

export default App;
